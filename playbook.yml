---
- name: Install and run docker on app hosts
  hosts: app
  become: true
  gather_facts: true
  tasks:
    - name: Add gpg key to Ubuntu
      ansible.builtin.get_url:
        url: 'https://download.docker.com/linux/ubuntu/gpg'
        dest: '/etc/apt/keyrings/docker.asc'
        mode: 'a+r'
      when: ansible_distribution == 'Ubuntu'

    - name: Add repo to Ubuntu
      ansible.builtin.apt_repository:
        filename: docker
        repo: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable'
      when: ansible_distribution == 'Ubuntu'

    - name: Check repos dir
      ansible.builtin.file:
        path: '/etc/yum.repos.d'
        state: directory
        mode: '644'
      when: ansible_distribution == 'CentOS'

    - name: Add Docker repo to CentOS
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
        mode: 'a+r'
      when: ansible_distribution == 'CentOS'

    - name: Disable Docker Edge repo CentOS
      community.general.ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0
        mode: 'a+r'
      when: ansible_distribution == 'CentOS'

    - name: Disable Docker Test repo CentOS
      community.general.ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-test'
        option: enabled
        value: 0
        mode: 'a+r'
      when: ansible_distribution == 'CentOS'

    - name: Install docker
      ansible.builtin.package:
        name: [docker-ce, docker-ce-cli, containerd.io, docker-buildx-plugin, docker-compose-plugin]
        state: present

    - name: Start docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

- name: Install postgresql
  hosts: database
  become: true
  gather_facts: true
  tasks:
    - name: Add PostgreSQL apt key
      ansible.builtin.get_url:
        url: 'https://www.postgresql.org/media/keys/ACCC4CF8.asc'
        dest: '/etc/apt/trusted.gpg.d/postgresql.asc'
        mode: 'a+r'
      tags:
        - database

    - name: Add PostgreSQL repository
      ansible.builtin.apt_repository:
        # ansible_distribution_release = xenial, bionic, focal
        repo: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
      tags:
        - database

    - name: Install postgresql
      ansible.builtin.apt:
        name:
          - 'postgresql-{{ postgresql_version }}'
          - 'postgresql-client-{{ postgresql_version }}'
        state: present
      tags:
        - database

    - name: Check directory
      ansible.builtin.file:
        path: '{{ postgresql_data }}'
        state: directory
        mode: '700'
        owner: postgres
        group: postgres
      tags:
        - database

    - name: Move data to new dir
      ansible.posix.synchronize:
        src: '/var/lib/postgresql/{{ postgresql_version }}/main/'
        dest: '{{ postgresql_data }}/'
        archive: true
      tags:
        - database

    - name: Stop postgresql service
      ansible.builtin.service:
        name: postgresql
        state: stopped
      tags:
        - database

    - name: Change service
      community.general.ini_file:
        dest: /lib/systemd/system/postgresql.service
        section: Service
        option: Environment
        value: 'PGDATA={{ postgresql_data }}'
        mode: '644'
      notify:
        - Reload systemd
      tags:
        - database

    - name: Set permissions
      ansible.builtin.file:
        path: '{{ postgresql_data }}/..'
        state: directory
        mode: '700'
        owner: postgres
        group: postgres
        recurse: true
      tags:
        - database

    - name: Change data destination
      ansible.builtin.lineinfile:
        path: '/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf'
        regexp: '^data_directory ='
        line: "data_directory = '{{ postgresql_data }}'"
        mode: '666'
      tags:
        - database

    - name: Start postgresql service
      ansible.builtin.service:
        name: postgresql
        state: started
      tags:
        - database
  handlers:
    - name: Reload systemd
      ansible.builtin.systemd_service:
        daemon_reload: true
      tags:
        - database
